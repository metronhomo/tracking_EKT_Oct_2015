#Helpers-------
#Con esta funci贸n obtenemos histogramas para las preguntas:
# ru = 1 cuando es una sola variable
# ru = 2 cuando sea respuesta multiple
cuenta<-function(datos,ru){
if(ru==1){
Top <- cbind(prop.table((table(datos)))*100) %>%
data.frame()
colnames(Top) <- c("Porcentaje")
Top <- cbind(linea= rownames(Top),Top)
return(Top)
}
if(ru ==2){
conteos<- apply(datos,2,function(c){
xtabs(~c,data=datos)
})
aux<-data.frame()
aux2<-lapply(conteos,function(l){
n<-length(l)
rbind(aux,data.frame(linea=names(l),valor=as.numeric(l[1:n])))
})
aux3<-Reduce('rbind',aux2) %>%
filter(linea !=" ") %>%
group_by(linea) %>%
mutate(Porcentaje=valor/nrow(base_con)) %>%
data.frame() %>%
arrange(desc(Porcentaje))
return(aux3)
}
}
#Ejemplo de la funci贸n-----
#cuenta(base_con[,95:104],2)
# imagen de Marca
gd <- function (mr){
conteos<- apply(mr,2,function(c){
xtabs(~c,data=mr)
})
aux<-data.frame()
aux2<-lapply(conteos,function(l){
n<-length(l)
rbind(aux,data.frame(linea=names(l),valor=as.numeric(l[1:n])))
})
aux3<-Reduce('rbind',aux2) %>%
filter(linea !=" ") %>%
group_by(linea) %>%
summarise(valor=sum(valor)) %>%
mutate(Porcentaje=valor/nrow(base_im)) %>%
data.frame() %>%
arrange(desc(Porcentaje))
return(aux3)
}
#gy <- lapply(frases,gd)
#Equity----
hj <- function(mr){
prob <- (prop.table((table(mr)))*100)
}
p14 <- function(data){
gr <- data.frame(do.call(cbind,lapply(data,hj)))
gr <- cbind(atributo= rownames(gr),gr)
aux<-gather(gr,"Tienda","Valor",-atributo)
aux$Tienda <- apply(as.data.frame(aux$Tienda),2,function(r){gsub("P14_","",r)})
return(aux)
}
# Ejemplo de como correr la funci贸n
# preg <-base_eq[,c(42:47)]
# p14(preg)
#evaluaci贸n de publicidad----
p15 <- function(don){
conteos<- lapply(don,function(c){
xtabs(~c,data=don)
})
aux<-data.frame()
aux2<-lapply(conteos,function(l){
n<-length(l)
rbind(aux,data.frame(linea=names(l),valor=as.numeric(l[1:n])))
})
aux3<-Reduce('rbind',aux2) %>%
filter(linea !=" ") %>%
group_by(linea) %>%
summarise(valor=sum(valor)) %>%
mutate(Porcentaje=valor/nrow(base_im)) %>%
data.frame() %>%
arrange(desc(Porcentaje))
return(aux3)
}
funp15<-function(){
gy <- data.frame(do.call(cbind,lapply(marcas,p15)))
gh <- gy[,c(1,3,6,9,12,15,18)]
colnames(gh) <-c("Medio","Elektra","Coppel","Famsa","Bodega Aurrera","Walmart","Liverpool")
aux<-gather(gh,"Tienda","Porcentaje",-Medio)
return(aux)
}
p14()
base_con<-readRDS("data/base_con.rds")
base_im<-readRDS("data/base_im.rds")
base_eq <- readRDS("data/base_eq.rds")
base_evap <- readRDS("data/base_evap.rds")
shiny::runApp()
install.packages("readxl")
shiny::runApp()
shiny::runApp()
?column
#         facet_wrap(~var_y) +
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
?h4
shiny::runApp()
shiny::runApp()
library(dplyr)
library(readxl)
data <- read_excel("../Base_Final.xlsx",sheet=1)
warnings(())
warnings()
View(data)
head(data)
View(data)
data <- read.csv("./data/Base_Final.csv")
View(data)
base_con <- data %>%
select(1,8,12:14,27:135)
saveRDS(base_con,"data/base_con.rds")
base_im <- data %>%
select(1,8,12:14,136:273)
saveRDS(base_im,"data/base_im.rds")
base_eq <- data %>%
select(1,8,12:14,274:315)
saveRDS(base_eq,"data/base_eq.rds")
base_evap <- data %>%
select(1,8,12:14,316:455)
saveRDS(base_evap,"data/base_evap.rds")
shiny::runApp()
shiny::runApp()
shiny::runApp()
?checkboxInput
View(iris)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
?downloadButton
?wellPanel
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
