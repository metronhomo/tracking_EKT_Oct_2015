a <- 2
a+2
install.packages('RODBC')
install.packages('RODBC')
install.packages("RODBC")
install.packages("RODBC")
library(nloptr)
eval_f <- function(x1, x2, x3) {8 * x1*x2 + 8*x2*x3 + 18*x1*x3}
eval_g_eq <- function(x1, x2, x3) {
a = x1*x2*x3 - 1500
b =x1-2*x2
return c(a,b)}
eval_g_eq <- function(x1, x2, x3) {
a = x1*x2*x3 - 1500
b = x1-2*x2
return c(a,b)}
eval_g_eq <- function(x1, x2, x3) {
a = x1*x2*x3 - 1500
b = x1 - 2*x2
return c(a,b)}
a=1
b=2
c(a,b)
a,b
[a,b]
eval_g_eq <- function(x1, x2, x3) {
a <- x1*x2*x3 - 1500
b <- x1 - 2*x2
return c(a,b)}
eval_g_eq <- function(x1, x2, x3) {
a <- x1*x2*x3 - 1500
b <- x1 - 2*x2
return(c(a,b))}
eval_g_eq(1,2,3)
?"nloptr"
opt <- nloptr( x0=c(1,1,1),
eval_f=eval_f,
lb = c(0,0,0),
ub = c(Inf,Inf,Inf),
eval_g_eq = eval_g_eq,
opts = list("algorithm"="NLOPT_LN_COBYLA"))
eval_f <- function(x) {8 * x[1]*x[2] + 8*x[2]*x[3] + 18*x[1]*x[3]}
eval_g_eq <- function(x) {
a <- x[1]*x[2]*x[3] - 1500
b <- x[1] - 2*x[2]
return(c(a,b))}
eval_g_eq(c(1,2,3))
opt <- nloptr( x0=c(1,1,1),
eval_f=eval_f,
lb = c(0,0,0),
ub = c(Inf,Inf,Inf),
eval_g_eq = eval_g_eq,
opts = list("algorithm"="NLOPT_LN_COBYLA"))
opt <- nloptr( x0=c(1,1,1),
eval_f=eval_f,
lb = c(0,0,0),
ub = c(Inf,Inf,Inf),
eval_g_eq = eval_g_eq,
opts = list("algorithm"="NLOPT_LN_AUGLAG"))
opt <- nloptr( x0=c(1,1,1),
eval_f=eval_f,
lb = c(0,0,0),
ub = c(Inf,Inf,Inf),
eval_g_eq = eval_g_eq,
opts = list("algorithm"="NLOPT_LD_MMA"))
opt <- nloptr( x0=c(1,1,1),
eval_f=eval_f,
lb = c(0,0,0),
ub = c(Inf,Inf,Inf),
eval_g_eq = eval_g_eq,
opts = list("algorithm"="NLOPT_LN_MMA"))
opt <- nloptr( x0=c(1,1,1),
eval_f=eval_f,
lb = c(0,0,0),
ub = c(Inf,Inf,Inf),
eval_g_eq = eval_g_eq,
opts = list("algorithm"="NLOPT_LN_COBYLA"))
opt <- nloptr( x0=c(1,1,1),
eval_f=eval_f,
lb = c(0,0,0),
ub = c(Inf,Inf,Inf),
eval_g_eq = eval_g_eq,
opts = list("algorithm"="NLOPT_LN_AUGLAG"))
opt <- nloptr( x0=c(1,1,1),
eval_f=eval_f,
lb = c(0,0,0),
ub = c(Inf,Inf,Inf),
eval_g_eq = eval_g_eq,
opts = list("algorithm"="NLOPT_LN_AUGLAG_EQ"))
opt <- nloptr( x0=c(1,1,1),
eval_f=eval_f,
lb = c(0,0,0),
ub = c(Inf,Inf,Inf),
eval_g_eq = eval_g_eq,
opts = list("algorithm"="NLOPT_GN_ISRES"))
opt
opt <- nloptr( x0=c(1,1,1),
eval_f=eval_f,
lb = c(0,0,0),
eval_g_eq = eval_g_eq,
opts = list("algorithm"="NLOPT_GN_ISRES"))
opt
opt <- nloptr( x0=c(1,1,1),
eval_f=eval_f,
lb = c(0,0,0),
eval_g_eq = eval_g_eq,
opts = list("algorithm"="NLOPT_GN_ISRES", maxeval=100000))
opt
opt$solution
opt <- nloptr( x0=c(10,10,10),
eval_f=eval_f,
lb = c(0,0,0),
eval_g_eq = eval_g_eq,
opts = list("algorithm"="NLOPT_GN_ISRES", maxeval=100000))
opt$solution
opt
eval_f(c(10,10,10))
opt <- nloptr( x0=c(1,1,1),
eval_f=eval_f,
#lb = c(0,0,0),
#ub = c(Inf,Inf,Inf),
eval_g_eq = eval_g_eq,
opts = list("algorithm"="NLOPT_GN_ISRES", maxeval=100000))
opt
opt <- nloptr( x0=c(1,1,1),
eval_f=eval_f,
#lb = c(0,0,0),
#ub = c(Inf,Inf,Inf),
eval_g_eq = eval_g_eq,
opts = list("algorithm"="NLOPT_LN_SBPLX", maxeval=100000))
opt <- nloptr( x0=c(1,1,1),
eval_f=eval_f,
#lb = c(0,0,0),
#ub = c(Inf,Inf,Inf),
eval_g_eq = eval_g_eq,
opts = list("algorithm"="NLOPT_LN_PRAXIS", maxeval=100000))
opt <- nloptr( x0=c(1,1,1),
eval_f=eval_f,
#lb = c(0,0,0),
#ub = c(Inf,Inf,Inf),
eval_g_eq = eval_g_eq,
opts = list("algorithm"="NLOPT_GN_ISRES", maxeval=100000))
opt
library(Matrix)
A = matrix(c(1,2,3,4), ncol=2)
A
trans(A)
t(A)
datos <- read.table('clipboard')
head(datos)
?read.table
datos <- read.table('clipboard', na.strings = '')
cd('/media/mario/MBC4GB/Shiny')
setwd('/media/mario/MBC4GB/Shiny')
datos <- read.csv('Base_Final.csv')
head(datos)
View(datos)
